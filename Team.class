import java.util.ArrayList;
import java.util.List;

public class Team {
    private String name;
    private int points;
    private List<Player> players;
    private List<Player> injuredPlayers;
    private Coach coach;
    private int yellowCards;
    private int redCards;
    private String[] fixtures;
    private String[] sponsors;

    public Team(String name, String coach, int yellowCards, int redCards, String[] fixtures, String[] sponsors) {
        this.name = name;
        this.yellowCards = yellowCards;
        this.redCards = redCards;
        this.fixtures = fixtures;
        this.sponsors = sponsors;
    }

    public String[] getFixtures() {
        return fixtures;
    }

    public String[] getSponsors() {
        return sponsors;
    }
    public Team(String name) {
        this.name = name;
        this.players = new ArrayList<>();
        this.injuredPlayers = new ArrayList<>();
        this.yellowCards = 0;
        this.redCards = 0;
    }

    public int getYellowCards() {
        return yellowCards;
    }
    public String getName() {
        return name;
    }

    public List<Player> getPlayers() {
        return players;
    }

    public List<Player> getInjuredPlayers() {
        return injuredPlayers;
    }

    public void addInjuredPlayer(Player player) {
        if (!injuredPlayers.contains(player)) {
            injuredPlayers.add(player);
        }
    }

    public void removeInjuredPlayer(Player player) {
        injuredPlayers.remove(player);
    }
    public int getRedCards() {
        return redCards;
    }

    public void addYellowCard() {
        yellowCards++;
    }

    public void addRedCard() {
        redCards++;
    }

    public void setName(String name) {
        this.name = name;
    }

    public int getPoints() {
        return points;
    }

    public void addPoints(int points) {
        this.points += points;
    }

    public void addPlayer(Player player) {
        players.add(player);
    }

    public boolean removePlayer(String playerName) {
        return players.removeIf(player -> player.getName().equalsIgnoreCase(playerName));
    }

    public Coach getCoach() {
        return coach;
    }

    public void setCoach(Coach coach) {
        this.coach = coach;
    }

    public boolean updateCoach(String name, int yearsOfExperience) {
        if (this.coach != null && this.coach.getName().equalsIgnoreCase(name)) {
            this.coach.setYearsOfExperience(yearsOfExperience);
            return true;
        }
        return false;
    }

    public boolean removeCoach() {
        if (this.coach != null) {
            this.coach = null;
            return true;
        }
        return false;
    }
    public void markPlayerInjured(Player player) {
        player.setInjured(true);
        addInjuredPlayer(player);
    }

    public void markPlayerHealthy(Player player) {
        player.setInjured(false);
        removeInjuredPlayer(player);
    }
    public void displayPlayers() {
        System.out.println("Danh sách cầu thủ của " + name + ":");
        for (Player player : players) {
            System.out.println(player);
        }
    }
    public void setYellowCards(int yellowCards) {
        this.yellowCards = yellowCards;
    }

    public void setRedCards(int redCards) {
        this.redCards = redCards;
    }
}
